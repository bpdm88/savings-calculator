{"version":3,"sources":["assets/images/sprout.svg","components/Header.js","components/Formfield.js","components/Detail.js","components/Compound.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","FormField","label","value","type","handleChange","placeholder","onChange","Detail","Compound","props","state","principal","monthly","period","interest","future","handleChangePrincipal","bind","handleChangeMonthly","handleChangePeriod","handleChangeInterest","handleSubmit","event","this","setState","currentTarget","preventDefault","power","rate","futurePrincipal","Math","pow","total","converted","Intl","NumberFormat","style","currency","format","regular","onSubmit","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77652be0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sprout.8b1f0232.svg\";","import logo from \"../assets/images/sprout.svg\";\nconst Header = () => {\n    return (\n        <header>\n            <h1 className=\"heading--alpha\">Savings Calculator</h1>\n            <img src={logo} alt=\"logo\" />\n        </header>\n    );\n};\n\nexport default Header;\n","const FormField = ({ label, value, type, handleChange, placeholder }) => {\n    return (\n        <div>\n            <label>{label}</label>\n            <input\n                value={value}\n                type={type}\n                onChange={handleChange}\n                placeholder={placeholder}\n            />\n        </div>\n    );\n};\n\nexport default FormField;\n","const Detail = () => {\n    return (\n        <div>\n            <h2 className=\"heading--bravo\">\n                Work out how a lump sum or regular monthly savings would grow\n            </h2>\n            <p>1. Enter a lump sum and / or a monthly savings amount.</p>\n            <p>2. Enter the term you intend to hold / pay in for</p>\n            <p>3. Enter the annual interest rate </p>\n        </div>\n    );\n};\n\nexport default Detail;\n","import React from \"react\";\nimport FormField from \"./Formfield\";\nimport Detail from \"./Detail\";\n\nclass Compound extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            principal: \"\",\n            monthly: \"\",\n            period: \"\",\n            interest: \"\",\n            future: \"\",\n        };\n\n        this.handleChangePrincipal = this.handleChangePrincipal.bind(this);\n        this.handleChangeMonthly = this.handleChangeMonthly.bind(this);\n        this.handleChangePeriod = this.handleChangePeriod.bind(this);\n        this.handleChangeInterest = this.handleChangeInterest.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChangePrincipal(event) {\n        this.setState({ principal: event.currentTarget.value });\n    }\n\n    handleChangeMonthly(event) {\n        this.setState({ monthly: event.currentTarget.value });\n    }\n\n    handleChangePeriod(event) {\n        this.setState({ period: event.currentTarget.value });\n    }\n\n    handleChangeInterest(event) {\n        this.setState({ interest: event.currentTarget.value });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        let { principal, monthly, period, interest } = this.state;\n\n        let power = 12 * period;\n        let rate = interest / 100 / 12 + 1;\n\n        let futurePrincipal = principal * Math.pow(rate, power);\n        let futureMonthly =\n            monthly * ((Math.pow(rate, power) - 1) / (interest / 100 / 12));\n\n        let total = futureMonthly + futurePrincipal;\n\n        let converted = new Intl.NumberFormat(\"en-GB\", {\n            style: \"currency\",\n            currency: \"GBP\",\n        }).format(total);\n\n        this.setState({ future: converted });\n    }\n\n    render() {\n        let { principal, regular, period, interest, future } = this.state;\n        return (\n            <section className=\"calculator\">\n                <Detail />\n                <form onSubmit={this.handleSubmit}>\n                    <h3 className=\"heading-charlie\">\n                        Whats Your Saving Goal ?\n                    </h3>\n                    <FormField\n                        label=\"Lump Sum\"\n                        value={principal}\n                        type=\"number\"\n                        handleChange={this.handleChangePrincipal}\n                        placeholder=\"£\"\n                    />\n                    <FormField\n                        label=\"Monthly Saving\"\n                        value={regular}\n                        type=\"number\"\n                        handleChange={this.handleChangeMonthly}\n                        placeholder=\"£\"\n                    />\n                    <FormField\n                        label=\"Duration\"\n                        value={period}\n                        type=\"number\"\n                        handleChange={this.handleChangePeriod}\n                        placeholder=\"Years\"\n                    />\n                    <FormField\n                        label=\"Annual Interest Rate\"\n                        value={interest}\n                        type=\"number\"\n                        handleChange={this.handleChangeInterest}\n                        placeholder=\"%\"\n                    />\n                    <button>Calculate</button>\n                </form>\n                <div className=\"result-box\">\n                    <div className=\"result\">\n                        <p>Your future savings value:</p>\n                        <h4 className=\"heading-charlie\">{future}</h4>\n                    </div>\n                    <p className=\"heading-note\">\n                        Calculator assumes interest is calculated and compounded\n                        monthly.\n                    </p>\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default Compound;\n","import \"./styles/main.css\";\nimport Header from \"./components/Header\";\nimport Compound from \"./components/Compound\";\n\nfunction App() {\n    return (\n        <>\n            <Header />\n            <Compound />\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}